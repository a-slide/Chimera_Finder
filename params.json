{"name":"Chimera_finder","tagline":"BASH scripts to extract chimeric pairs and chimeric reads from NGS data mixing 2 DNA references","body":"# Welcome to Chimera_finder Page\r\n\r\n## Motivations\r\nChimera_finder consist of 2 simple Bash pipelines for pair end illumina NGS data, originally dedicated to retrieval of viral insertion sites retrieval in a host cell genome (chimeric paired end and chimeric reads). Pipelines were initially designed to find Adeno associated vectors genome integrated in host cell genomic DNA, but they may also be suitable for any other viral integration sites after minor code modifications.\r\n\r\n## Principle\r\nData provided to both pipelines had to be generated by pair end sequencing with a recent Illumina platform (MiSeq or Hiseq). The scripts use the same basic strategy but **chimera_finder_single.sh** merge forward and reverse fastq read files at the very beginning of its execution and mapping is then performed in single end mode. In contrast **chimera_finder_pair.sh** keep pairs separated through all the process. **chimera_finder_single.sh** is able to extract reads that overlap host DNA and viral DNA, while **chimera_finder_pair.sh** identify paired reads having one read mapped on a reference and the second read mapped on a different reference.\r\n\r\nBasic steps of the algorithms are detailed bellow\r\n\r\n### Preprocessing\r\nExtremities of bad quality sequences are trimmed using Sickle using \"pe mode\" for **chimera_finder_pair.sh** and \"se mode\" for **chimera_finder_single.sh**\r\n\r\n### Subtraction of non-chimeric reads/pairs\r\nIn order to facilitate further analyses, we first remove from dataset reads (for **chimera_finder_single.sh**) and read pairs (for **chimera_finder_pair.sh**) which map unambiguously on only one of the reference. To do so, fastq are mapped against the viral genome with the fast read aligner Bowtie2 using end to end highly stringent mapping conditions. reads/pairs with a MAPQ > 30 are then removed using Samtools and a fastq dataset is regenerated with Bedtools bamtofastq. From this smaller dataset, a second round of mapping/filtering/fastq regeneration is then performed with the host cell genome.\r\n\r\n### Extraction of chimeras\r\n**chimera_finder_single.sh** performs a local bowtie2 alignment against a reference index mixing both viral and genomic DNA. We used a special option of Bowtie2 (-k 5) rendering the 5 best alignments instead of only one. SAM files resulting from the alignment are parsed with standard UNIX tools (grep, sort, awk, comm and join) to select reads with map in both viral and genomic DNA. \r\n\r\nAs for **chimera_finder_pair.sh** the principle is slightly different. A standard local alignment is performed against the mixed index and SAM file is parsed to retrieve pairs with one read aligned on viral DNA and the mate on host cell DNA.\r\n\r\n### Postprocessing\r\nDuring this last step a BAM file, a BAM index (.BAI) and a Bedgraph are produced for further visualization (with [integrated genomic viewer](http://www.broadinstitute.org/igv/home) for example). Finally, a report containing parameters used for this run and BAMflag statistics is generated (sample_report.txt)\r\n\r\n## Get Chimera_finder\r\n\r\n### From github repository \r\n``` bash\r\n$ git clone https://github.com/a-slide/Chimera_Finder my_folder/\r\n```\r\n\r\n### Archive download\r\n* [ZIP archive](https://github.com/a-slide/Chimera_Finder/archive/master.zip)\r\n* [TAR.GZ archive](https://github.com/a-slide/Chimera_Finder/tarball/master)\r\n\r\nIn both case, scripts must be made executable using *chmod*.\r\n``` bash\r\n$ sudo chmod u+x chimera_finder_pair.sh chimera_finder_single.sh\r\n```\r\n\r\n## Usage\r\nBefore using pipelines, the 3 following reference genomes must be indexed for Bowtie2 (see [the-bowtie2-build-indexer](http://bowtie-bio.sourceforge.net/bowtie2/manual.shtml#the-bowtie2-build-indexer) :\r\n* Viral genome alone\r\n* Host cell genome alone\r\n* Viral and host cell genome together\r\n\r\n``` bash\r\n$ # For chimeric pairs extraction\r\n$ ./ chimera_finder_single.sh \r\n$\t[ R1.fastq(.gz) ]\r\n$\t[ R2.fastq(.gz) ]\r\n$\t[ output name ]\r\n$\t[ viral genome index]\r\n$\t[ host genome index]\r\n$\t[ viral + host genome index]\r\n```\r\nFastq files containing forward reads (R1.fastq) and reverse reads (R2.fastq) can be provide as uncompressed or tarball compressed files.\r\n\r\nThe output name will be used as a prefix for all files that will be generated during the analysis.\r\n\r\nIndexes need to be indicated as the basename of index files up to but not including the final *.1.bt2*. For example, for the viral genome indexed file in the folder *my_virus_index* are named *my_virus.1.bt2*, *my_virus.2.bt2*, *my_virus.3.bt2*, *my_virus.4.bt2*, *my_virus.rev.1.bt2*, *my_virus.rev.2.bt2*. In this situation viral genome index will be *path/my_virus_index/my_virus*.\r\n\r\n### Dependencies:\r\nThe script was developed under Linux Mint 16 \"petra\" but is compatible with other LINUX debian based distributions. The following dependencies are required by the pipeline. Users should verify that all of these programs are added to PATH and correspond to the indicated or a later version.\r\n* [GNU bash](https://www.gnu.org/software/bash/), version 4.2.45(1)-release\r\n* [Sickle](https://github.com/najoshi/sickle) (v1.210)\r\n* [Bowtie2](http://bowtie-bio.sourceforge.net/bowtie2/index.shtml) (v2.1.0)\r\n* [Samtools]( http://samtools.sourceforge.net/) (v0.1.19-96b5f2294a) \r\n* [Bedtools]( https://github.com/arq5x/bedtools2/release) (v2.17.0)\r\n\r\n## Authors and Contact\r\nAdrien Leger @a-slide\r\n\r\nadrien.leger@inserm.fr\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}